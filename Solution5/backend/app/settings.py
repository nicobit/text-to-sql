import os

# OPEN AI
OPEN_AI_KEY = os.getenv("AZURE_OPENAI_KEY")
EMBEDDING_MODEL = os.getenv("EMDEDDING_MODEL","text-embedding-ada-002")
COMPLETION_MODEL = os.getenv("COMPLETION_MODEL","gpt-35-turbo") 
OPENAI_ENDPOINT = os.getenv("AZURE_OPENAI_ENDPOINT")
OPEN_AI_VERSION = os.getenv("AZURE_OPENAI_VERSION", "2025-01-01-preview")

# AZURE INFO
TENANT_ID = os.getenv("AZURE_AD_TENANT_ID")
CLIENT_ID = os.getenv("AZURE_AD_CLIENT_ID")  # App ID of the backend API

# MANAGE SECRETS FOR CONNECTION STRING
USE_KEY_VAULT_TO_GET_CONNECTION_STRING = os.getenv("USE_KEY_VAULT_TO_GET_CONNECTION_STRING", "false").lower() == "true"

KEY_VAULT_URI = os.getenv("KEY_VAULT_URI")
SQL_CONNECTION_STRING_SECRET_NAME = os.getenv("SQL_CONNECTION_STRING_SECRET_NAME")  
SQL_CONNECTION_STRING = os.getenv("SQL_CONNECTION_STRING")

# CORS
CORS_ALLOWED_ORIGINS = os.getenv("CORS_ALLOWED_ORIGINS", "http://localhost:3000,http://localhost:5173,http://example.com")

# APPLICATION INSIGHTS
APPLICATIONINSIGHTS_CONNECTION_STRING = os.getenv("APPLICATIONINSIGHTS_CONNECTION_STRING")

# NOT NEEDED FOR NOW
INDEX_NAME = os.environ.get("AZURE_SEARCH_INDEX_NAME", "nl2sql-index")
SEARCH_SERVICE = os.environ.get("AZURE_SEARCH_SERVICE_NAME")
SEARCH_API_KEY = os.environ.get("AZURE_SEARCH_API_KEY")
OPENAI_DEPLOYMENT = os.getenv("AZURE_OPENAI_DEPLOYMENT")

ROWS_LIMIT = os.getenv("AZURE_OPENAI_DEPLOYMENT","100")

BLOB_STORAGE_CONNECTION_STRING = os.getenv("BLOB_STORAGE_CONNECTION_STRING")




