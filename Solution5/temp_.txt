/* =========================================================

   Azure-glass Tables for MkDocs Material (small base font-size)

   Target: sites where body font-size ≈ 0.7 (e.g., 0.7rem)

   ========================================================= */



/* ---- Card-like wrapper that Material uses for tables ---- */

.md-typeset__table {

  background: var(--card-bg-light);

  border: var(--border);

  border-radius: var(--radius);

  box-shadow: var(--shadow);

  backdrop-filter: blur(6px);

  overflow: hidden;                 /* clip corners for the inner table */

  margin: 1rem 0;

  /* edge fade for horizontal scroll */

  -webkit-mask-image: linear-gradient(to right, transparent 0, black 20px, black calc(100% - 20px), transparent 100%);

  mask-image: linear-gradient(to right, transparent 0, black 20px, black calc(100% - 20px), transparent 100%);

}

[data-md-color-scheme="slate"] .md-typeset__table {

  background: var(--card-bg-dark);

  border: var(--border-dark);

  box-shadow: var(--shadow-dark);

}



/* Smooth horizontal scrolling on very wide tables */

.md-typeset__table table { width: 100%; }



/* ---- Base table styles (plain markdown tables and .ai-table) ---- */

.md-typeset table:not([class]),

.md-typeset table.ai-table {

  width: 100%;

  border-collapse: separate;

  border-spacing: 0;

  /* Slightly larger than site base (≈0.7) to keep readability */

  font-size: clamp(0.85rem, 1.2vw, 0.95rem);

  line-height: 1.45;

  table-layout: auto;

}



/* Cells */

.md-typeset table:not([class]) th,

.md-typeset table:not([class]) td,

.md-typeset table.ai-table th,

.md-typeset table.ai-table td {

  /* Use em so padding scales with the local font-size */

  padding: 0.75em 0.9em;   /* ≈ 10–12px at 0.9–1.0rem */

  border: 0;

  vertical-align: middle;

  word-break: normal;

}



/* Header (sticky + subtle backdrop) */

.md-typeset table:not([class]) thead th,

.md-typeset table.ai-table thead th {

  position: sticky;

  /* offset to sit below Material header; adjust if needed */

  top: calc(var(--md-header-height, 3.2rem) + 0.5rem);

  z-index: 2;

  background: color-mix(in oklab, var(--md-default-bg-color, #fff) 78%, transparent);

  font-weight: 600;

  letter-spacing: .01em;

  border-bottom: 1px solid rgba(0,0,0,.08);

}

[data-md-color-scheme="slate"] .md-typeset table:not([class]) thead th,

[data-md-color-scheme="slate"] .md-typeset table.ai-table thead th {

  background: color-mix(in oklab, var(--md-default-bg-color, #111) 82%, transparent);

  border-bottom: 1px solid rgba(255,255,255,.08);

}



/* Row striping */

.md-typeset table:not([class]) tbody tr:nth-child(odd) td,

.md-typeset table.ai-table tbody tr:nth-child(odd) td {

  background: color-mix(in oklab, var(--md-default-bg-color, #fff) 96%, transparent);

}

[data-md-color-scheme="slate"] .md-typeset table:not([class]) tbody tr:nth-child(odd) td,

[data-md-color-scheme="slate"] .md-typeset table.ai-table tbody tr:nth-child(odd) td {

  background: rgba(255,255,255,0.02);

}



/* Row separators */

.md-typeset table:not([class]) tbody tr td,

.md-typeset table.ai-table tbody tr td {

  border-top: 1px solid rgba(0,0,0,.05);

}

[data-md-color-scheme="slate"] .md-typeset table:not([class]) tbody tr td,

[data-md-color-scheme="slate"] .md-typeset table.ai-table tbody tr td {

  border-top: 1px solid rgba(255,255,255,.05);

}



/* Stronger hover highlight (indigo wash) + smooth transitions */

.md-typeset table:not([class]) tbody tr td,

.md-typeset table.ai-table tbody tr td {

  transition: background-color .15s ease, color .15s ease;

}

.md-typeset table:not([class]) tbody tr:hover td,

.md-typeset table.ai-table tbody tr:hover td {

  background: color-mix(in oklab, #4f46e5 18%, var(--md-default-bg-color, #fff));

}

[data-md-color-scheme="slate"] .md-typeset table:not([class]) tbody tr:hover td,

[data-md-color-scheme="slate"] .md-typeset table.ai-table tbody tr:hover td {

  background: color-mix(in oklab, #60a5fa 28%, var(--md-default-bg-color, #111));

}



/* Keyboard focus within a row */

.md-typeset table tr:focus-within td {

  outline: 0;

  background: color-mix(in oklab, #4f46e5 20%, var(--md-default-bg-color, #fff));

}

[data-md-color-scheme="slate"] .md-typeset table tr:focus-within td {

  background: color-mix(in oklab, #60a5fa 30%, var(--md-default-bg-color, #111));

}



/* ---- Compact / Dense variants (apply via attr_list) ----

   Usage after the table:

   {: .ai-table .table--compact}

   or

   {: .ai-table .table--dense}

---------------------------------------------------------- */

.ai-table.table--compact td,

.ai-table.table--compact th {

  padding: 0.55em 0.7em;           /* tighter */

  font-size: clamp(0.82rem, 1.1vw, 0.9rem);

}

.ai-table.table--dense td,

.ai-table.table--dense th {

  padding: 0.45em 0.6em;           /* densest */

  font-size: clamp(0.8rem, 1vw, 0.88rem);

}



/* ---- Numeric alignment helper (optional) ----

   Use <td class="ai-num">123</td> or add via Markdown HTML.

------------------------------------------------ */

.ai-num {

  text-align: right;

  font-variant-numeric: tabular-nums;

}



/* ---- Status pills (optional) ----

   Use: <span class="pill ok">On track</span>

------------------------------------------------ */

.pill {

  display: inline-block;

  padding: 0.15em 0.55em;

  border-radius: 999px;

  font-size: 0.85em;               /* scale with table font */

  line-height: 1.4;

  border: 1px solid transparent;

  white-space: nowrap;

}

.pill.ok    { background: rgba(16,185,129,.12); border-color: rgba(16,185,129,.25); }

.pill.warn  { background: rgba(245,158,11,.12); border-color: rgba(245,158,11,.25); }

.pill.block { background: rgba(239,68,68,.12);  border-color: rgba(239,68,68,.25); }



/* ---- Tables inside admonitions / tabs: keep sticky header visible ---- */

.md-typeset .admonition,

.md-typeset details,

.md-typeset .tabbed-set { overflow: visible; }



/* ---- Optional: disable sticky header on very small screens ---- */

/*

@media (max-width: 480px) {

  .md-typeset table:not([class]) thead th,

  .md-typeset table.ai-table thead th { position: static; }

}

*/



/* =========================================================

   End Azure-glass Tables

   ========================================================= */

Notes



This assumes you already have the shared variables in your theme (--card-bg-light/dark, --border, --radius, --shadow, etc.).
If your sticky header sits too low/high under your site header, adjust:


.md-typeset table.ai-table thead th { top: calc(var(--md-header-height) + 0.25rem); }




Remember to enable attr_list in mkdocs.yml if you use the per-table modifiers.


-----------------------------------------------------------
------------------------------------------------------------



1) 

mkdocs.yml

 (keep Mermaid, add our init after it)





Make sure our init loads after Mermaid:

extra_javascript:

  - https://unpkg.com/mermaid@10/dist/mermaid.min.js

  - assets/js/mermaid-init.js   # <-- new



extra_css:

  - assets/styles/extra.css

If you had another custom Mermaid init script, remove it to prevent conflicts.









2) 

docs/assets/js/mermaid-init.js





This file integrates the theme variables + safe re-init:

(function () {

  // ---- helpers ----

  const isDark = () => document.body.getAttribute('data-md-color-scheme') === 'slate';



  const themeVars = (dark) => {

    const baseText = dark ? "rgba(255,255,255,0.92)" : "rgba(0,0,0,0.84)";

    return {

      /* base */

      fontFamily: "Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif",

      primaryColor: "#4f46e5",

      primaryTextColor: "#ffffff",

      secondaryColor: dark ? "rgba(99,102,241,0.35)" : "rgba(99,102,241,0.18)",

      tertiaryColor: "transparent",

      lineColor: dark ? "rgba(255,255,255,0.5)" : "rgba(0,0,0,0.5)",

      textColor: baseText,

      background: "transparent",

      mainBkg: "transparent",

      clusterBkg: "transparent",

      clusterBorder: dark ? "rgba(255,255,255,0.12)" : "rgba(0,0,0,0.08)",

      borderRadius: 8,



      /* gantt specifics */

      ganttAxisFontSize: "12px",

      ganttTaskHeight: 24,

      ganttBarCornerRadius: 6,

      ganttSectionBkgColor: dark ? "rgba(255,255,255,0.03)" : "rgba(0,0,0,0.025)",

      ganttSectionBkgColor2: "transparent",

      ganttGridLineColor: dark ? "rgba(255,255,255,0.12)" : "rgba(0,0,0,0.08)",

      ganttTodayLineColor: dark ? "#38bdf8" : "#4f46e5",



      /* task states */

      taskTextColor: baseText,

      taskBkgColor: dark ? "rgba(99,102,241,0.35)" : "rgba(99,102,241,0.18)",

      taskBorderColor: dark ? "rgba(99,102,241,0.9)" : "rgba(99,102,241,0.65)",

      taskDoneColor: dark ? "rgba(16,185,129,0.35)" : "rgba(16,185,129,0.18)",

      taskDoneTextColor: baseText,

      taskLateColor: dark ? "rgba(239,68,68,0.35)" : "rgba(239,68,68,0.2)",

      taskLateTextColor: baseText,

      taskCriticalColor: dark ? "rgba(245,158,11,0.35)" : "rgba(245,158,11,0.22)",

      taskCriticalTextColor: baseText,

      activeTaskBorderColor: dark ? "#93c5fd" : "#2563eb",

    };

  };



  function configureMermaid() {

    const dark = isDark();

    mermaid.initialize({

      startOnLoad: false,          // we render manually to avoid double init

      theme: "base",

      themeVariables: themeVars(dark),

      gantt: {

        useWidth: 1000,

        leftPadding: 85,

        rightPadding: 20,

        topPadding: 30,

        barGap: 6

      },

      securityLevel: "loose"

    });

  }



  // Render all .mermaid blocks, safely (clean data-processed)

  async function renderAll() {

    if (!window.mermaid) return;

    configureMermaid();



    const blocks = Array.from(document.querySelectorAll(".mermaid"));

    // Unprocess if already rendered (so we can re-render on theme toggle)

    blocks.forEach(el => {

      el.removeAttribute('data-processed');

      // If Mermaid replaced the element contents with <svg>, restore original text if stored

      if (el.__original) el.textContent = el.__original;

      else el.__original = el.textContent;

    });



    try {

      await mermaid.run({ nodes: blocks });

    } catch (e) {

      // Fallback: render one by one to isolate errors

      for (const el of blocks) {

        try { await mermaid.run({ nodes: [el] }); } catch (err) { console.error(err); }

      }

    }

  }



  function init() {

    if (!window.mermaid) return;

    renderAll();

  }



  // Initial load

  if (document.readyState === "loading") {

    document.addEventListener("DOMContentLoaded", init);

  } else {

    init();

  }



  // Re-render on Material theme toggle (light/dark)

  const obs = new MutationObserver((muts) => {

    for (const m of muts) {

      if (m.type === "attributes" && m.attributeName === "data-md-color-scheme") {

        renderAll();

        break;

      }

    }

  });

  obs.observe(document.body, { attributes: true });



  // Re-render when navigating between pages with instant navigation enabled

  document.addEventListener("DOMContentLoaded", () => {

    const main = document.querySelector("main");

    if (!main) return;

    const navObs = new MutationObserver(() => renderAll());

    navObs.observe(main, { childList: true, subtree: true });

  });

})();









3) Keep your existing Mermaid in Markdown





No changes needed in your .md files—your blocks like:

```mermaid

gantt

  title Product Milestones (Q4 2025)

  dateFormat  YYYY-MM-DD

  axisFormat  %d %b

  section Core

  Kickoff :milestone, m1, 2025-10-03, 0d

  Architecture :active, a1, 2025-10-01, 2025-10-20

  section Delivery

  Feature A :done, f1, 2025-10-05, 2025-10-25

  Feature B : f2, 2025-10-15, 2025-11-15

…will render using the new theme and will auto-repaint when the user toggles dark mode.



---



# 4) (Optional) Keep the “glass card” look

If you haven’t added this yet, include the wrapper styles in your `extra.css`:



```css

.mermaid {

  background: var(--card-bg-light);

  border: var(--border);

  border-radius: var(--radius);

  box-shadow: var(--shadow);

  backdrop-filter: blur(6px);

  padding: 12px;

  overflow: auto;

  margin: 1rem 0;

  -webkit-mask-image: linear-gradient(to right, transparent 0, black 20px, black calc(100% - 20px), transparent 100%);

  mask-image: linear-gradient(to right, transparent 0, black 20px, black calc(100% - 20px), transparent 100%);

}

[data-md-color-scheme="slate"] .mermaid {

  background: var(--card-bg-dark);

  border: var(--border-dark);

  box-shadow: var(--shadow-dark);

}







That’s it. Replace your old init with this mermaid-init.js and you’ll have the Azure-style Gantt theme, dark-mode sync, and safe re-renders without duplication.
